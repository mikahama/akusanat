# Divvun & Giellatekno - open source grammars for Sámi and other languages
# Copyright © 2000-2013 The University of Tromsø 
# http://giellatekno.uit.no & http://divvun.no
#
# This program is free software; you can redistribute and/or modify
# this file under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version. The GNU General Public License
# is found at http://www.gnu.org/licenses/gpl.html. It is
# also available in the file $GTHOME/LICENSE.txt.
#
# Other licensing options are available upon request, please contact
# giellatekno@hum.uit.no or divvun@hum.uit.no

# =============================================================== #
#    E R Z Y A  D I S A M B I G U A T O R               
# =============================================================== #
# ================================================================ 




      # =========================================== #
      #      Short table of contents                #
      # =========================================== #

      # Delimiters
      # Tags and sets
      # Disambiguation rules
       # One-cohort disambiguation - cycle 0
       # Local disambiguation - cycles 1 and 2
       # Cycle 1a: Special cases 
       # Cycle 1b: Cleaning up after the special cases
       # Cycle 2: Other local disambiguation 
       # Mapping of COMP-CS<, CC and CS
       # More diambiguation
       # Verb mappings 
       # Disambiguating nouns
       # Mainly mapping-rules   
       # Disambiguating nouns
  	   # Case disambiguation
       # Cycle 3: Global disambiguation 
	   # Cycle 4: Syntactic disambiguation 
	   # Cycle 5: Post-syntactic morphological disambiguation



# =============== #
#!! !!!DELIMITERS 
# =============== #
SUBREADINGS = LTR ;

DELIMITERS = "<.>" "<!>" "<?>" "<...>" "<¶>"; 

#PARENTHESES = "<$(>" "<$)>" "<$[>" "<$]>" "<${>" "<$}>" "<$«>" "<$»>" ;

# ================== #
#!! !!!TAGS AND SETS
# ================== #


#!! !!Sets containing lists of tags

SETS

# I define end of clause and beginning of clause in a way so that the file
# may be read both by the CG-2 and the vislcg formalisms.

LIST BOS = (>>>) (<s>);
LIST EOS = (<<<) (</s>);

# CG3 doesn´t function without >>> and <<< !

# Tags declared as single-membered LISTs 
# ======================================

#!! Upper and lower case
LIST Upper = "<[А-ЯЁ][а-яё]*>"r ;
LIST Lower = "<[а-яё]+>"r ;

LIST Err/Orth = Err/Orth ;

# We can define sets for common tag clusters
LIST Case = (n sg) (n pl) ; # A set that matches either a Noun Singular or a Noun Plural


#!! * Sets for parts of speech
# ---------------

LIST N = N ;
LIST A = A ;
LIST Adv = Adv ;
LIST V = V ;
LIST Pron = Pron ;
LIST Det = Det ;
LIST Qnt = Qnt ;

LIST CS = CS ;
LIST CCC = CC ;
SET CC = CCC - ("sihke") ;
SET CC-CS = CC OR CS ;
#LIST Po = Po ;
LIST Pr = Pr ;
LIST Pcle = Pcle ;
LIST Num = Num ;
LIST Interj = Interj ;
LIST ABBR = ABBR ;
LIST ACR = ACR ;

LIST CLB = CLB ;
LIST LEFT = LEFT ;
LIST RIGHT = RIGHT ;
LIST WEB = WEB ;
LIST QMARK = """ ; # ADD " FOR SYNTAX COLOURING.
LIST PPUNCT = PUNCT ;
SET PUNCT = PPUNCT - QMARK ;

LIST Comma = "," ;
LIST ¶ = ¶;
LIST HYPHEN = "-" ;
LIST QUEST = "?" ;

#LIST V* = V* ;

#!! * Sets for POS sub-categories
# ------------------

LIST Pers = Pers ;
LIST Dem = Dem ;
LIST Interr = Interr ;
LIST Indef = Indef ;

LIST Recipr = Recipr ;
LIST Refl = Refl ;
LIST Rel = Rel ;
 
LIST Adp = Adp ;

LIST AssocColl = AssocColl;
LIST Coll = Coll ;
LIST NomAg = NomAg ;
LIST G3 = G3 ;
LIST Prop = Prop ;

LIST SCONJ = ScSg1 ScSg2 ScSg3 ScPl1 ScPl2 ScPl3 ;
LIST OCONJ = OcSg1 OcSg2 OcSg3 OcPl1 OcPl2 OcPl3 ;

#!! * Sets for Semantic tags
# -------------

LIST Sem/Ant = Sem/Ant ;
LIST ANT = Sem/Ant Sem/Ant_Fem Sem/Ant_Mal ;
LIST SUR = Sem/Sur_Mal Sem/Sur_Fem ;
LIST Ani = Ani Sem/Kin Hum Fem Mal Sur ;
LIST Fem = Fem ;
LIST Mal = Mal ;

LIST Obj = Obj ;
LIST Org = Org ;
LIST Plc = Plc ;

LIST Sur = Sur ;
LIST Sem/Sur = Sem/Sur ;

LIST Time = Time ;
LIST Temp = Temp ;
LIST Hum = Hum ;
LIST Date = Date ;


#!! * Sets for Morphosyntactic properties
# --------------------------

LIST Abe = Abe ;
LIST Abl = Abl ;
LIST Com = Com ;
LIST Cmpr = Cmpr ;
LIST Dat = Dat ;
LIST Ela = Ela ;
LIST Gen = Gen ;
LIST Ill = Ill ;
LIST Ine = Ine ;
LIST Lat = Lat ;
LIST Loc = Loc ;
LIST Nom = Nom ;
LIST Prl = Prl ;
LIST TempCx = TempCx ;
LIST Tra = Tra ;
LIST Voc = Voc ;

LIST CASE = Nom Gen Abl Dat Com Ine Ill Ela Tra Abe Prl Loc Lat Cmpr ;
SET OBLCASE = CASE - Nom ;

LIST Sg = Sg ;
LIST Pl = Pl ;
LIST SP = SP ;

LIST NUM = Sg Pl SP ;

LIST RCmpnd = RCmpnd ;

LIST Cmpnd = Cmpnd ;
 
LIST SgNomCmp = SgNomCmp ;
 
LIST SgGenCmp = SgGenCmp ;

LIST ShCmp = ShCmp ;

LIST Def = Def ;
#LIST Indef = Indef ; already exists

LIST PxSg1 = PxSg1 ;
LIST PxSg2 = PxSg2 ;
LIST PxSg3 = PxSg3 ;
 
LIST PxPl1 = PxPl1 ;
LIST PxPl2 = PxPl2 ;
LIST PxPl3 = PxPl3 ;

LIST PXPERSON = PxSg1 PxSg2 PxSg3 PxPl1 PxPl2 PxPl3 ; 

LIST Comp = Comp ;
LIST Superl = Superl ;

LIST Attr = Attr ;
LIST Ord = Ord ;

LIST Qst = Qst ;
 
# The ("ge" Pcle) etc. are used in Apertium
LIST Foc/Гак = Foc/Гак ;
LIST Clt/Га = Clt/Га ;
LIST Clt/Гая = Clt/Гая ;
LIST Clt/Гаять = Clt/Гаять ;
LIST Clt/Гаятя = Clt/Гаятя ;
LIST Clt/Гатя = Clt/Гатя ;
LIST Clt/Гака = Clt/Гака ;
LIST Clt/Гакая = Clt/Гакая ;


LIST IV = IV ;
LIST TV = TV ;

#LIST Der/Pass = Der/PassL Der/PassS ;

LIST Prs = Prs ;
LIST Prt1 = Prt1;
LIST Prt2 = Prt2;


LIST Cond = Cond ;
LIST Conj = Conj ;
LIST Des = Des ;
LIST Ind = Ind ;
LIST Opt = Opt ;

LIST Imprt = Imprt ;

LIST ScSg1 = ScSg1 ;
LIST ScSg2 = ScSg2 ;
LIST ScSg3 = ScSg3 ;
 
LIST ScPl1 = ScPl1 ;
LIST ScPl2 = ScPl2 ;
LIST ScPl3 = ScPl3 ;

LIST SCPERSON = ScSg1 ScSg2 ScSg3 ScPl1 ScPl2 ScPl3 ;

LIST SCPERSON12 = ScSg1 ScSg2 ScPl1 ScPl2 ;

LIST OcSg1 = OcSg1 ;
LIST OcSg2 = OcSg2 ;
LIST OcSg3 = OcSg3 ;
 
LIST OcPl1 = OcPl1 ;
LIST OcPl2 = OcPl2 ;
LIST OcPl3 = OcPl3 ;

LIST Sg1 = Sg1 ;
LIST Sg2 = Sg2 ;
LIST Sg3 = Sg3 ;

LIST Pl1 = Pl1 ;
LIST Pl2 = Pl2 ;
LIST Pl3 = Pl3 ;

LIST PERSON = Sg1 Sg2 Sg3 Pl1 Pl2 Pl3 ;

LIST Inf = Inf ;
LIST ConNeg = ConNeg ;
LIST ConNegII = ConNegII ;
LIST Neg = Neg ;
LIST Aux = Aux ;
LIST Comp = Comp ;

LIST PrfPrc = PrfPrc ;
LIST VGen = VGen ;

LIST PrsPrc = PrsPrc ;
 

LIST Ger = Ger ;
LIST Sup = Sup ;
LIST Actio = Actio ;

LIST Der/PassL = Der/PassL ;
LIST Der/NomAg = Der/NomAg ;
LIST Actor = NomAg Der/NomAg ;
LIST VAbess = VAbess ;
LIST ActPrcShort = ActPrcShort ;

#!! * Sets for Derivation
# ----------


LIST Der/ВтОмО = Der/ВтОмО ;
LIST Der/шка = Der/шка ;
LIST Der/Онь = Der/Онь ;
LIST Der/ай = Der/ай ;
LIST Der/кай = Der/кай ;
LIST Der/Ы = Der/Ы ;
LIST Der/стО = Der/стО ;
LIST Der/ОвОмс = Der/ОвОмс ;
LIST Der/ОвтОмс = Der/ОвтОмс ;
LIST Der/Dimin = Der/Dimin ;

LIST Der/MWN = Der/MWN ;
LIST Der/Dem = Der/Dem ;
LIST Der/Pr = Der/Pr ;
LIST Clt/Cop = Clt/Cop ;

LIST <vdic> = <vdic> ;

LIST KUROK = "курок" ;
LIST MARTO = "марто" ;
LIST PESHKSE = "пешксе" ;
LIST SEDE = "седе" ;
LIST CARDNUM = "вейке" "кавто" "колмо" "ниле" "вете" "кото" ;
LIST PERSPRONSG = "мон" "тон" "сон" "монсь" "тонсь" "сонсь" ;
LIST PERSPRONPL = "минь" "тынь" "сынь" "минсь" "тынсь" "сынсь" ;
LIST ULEMS = "улемс" ;
LIST ULYNEMS = "ульнемс" ;
LIST JALGA = "ялга" ;
LIST JAKAMS = "молемс" "якамс" ;
LIST NONCOUNT = "кекше" "сод" "сода"  ;
LIST NONSENSESURANT = "Ней" ;
LIST NONLATIVENOUN = "аржо" "ал" "буря" "ваз" "вал" "варма" "ваце" "ведь" "верь" "вий" "давол" "зыян" "ёрок" "каворькс" "кажо" "кал" "качамо" "кев" "кедьал" "кеж" "кель" "кеска" "кикс" "конь" "кошт" "кудря" "куя" "левкс" "лекш" "лем" "ливезь" "лов" "ловажа" "ловсо" "лом" "лопа" "макшо" "медь" "морго" "нарде" "нолго" "норо" "нузякс" "нула" "нулготькс" "нулко" "нупонь" "ой" "орга" "панкс" "пежеть" "пиземе" "питне" "пона" "поп" "пуль" "ризкс" "роса" "рудаз" "сакал" "сакало" "сал" "сан" "сардо" "сельведь" "сёвонь" "сёлмо" "сёрма" "сий" "сильге" "сильдей" "сод" "солдат" "сув" "сукс" "сэкс" "сэпе" "сярдо" "таз" "тарькс" "терьге" "теште" "тикше" "толга" "топо" "туман" "ундо" "цеця" "часия" "чекерь" "чемень" "чечена" "чине" "числа" "чов" "чувар" "эй" "яд" "ярмак" ; #!! This will be expanded for homonymy at first

LIST TEMPORALNOUN = "буря" "валдо" "валске" "варма" "ве" "давол" "ёндол" "ие" "истямо" "кизэ" "ков" "минута" "пиземе" "пизем" "пинге" "погода" "пора" "пси" "раз" "рудаз" "сув" "тундо" "чадыведь" "чи" "чопода" "шка" "якшам" "якшамо" ; #!! This will be expanded for homonymy at first, i.e., diminutives
SET NOT-TEMPORALNOUN = N - TEMPORALNOUN  ;

LIST NOTFIRSTSECONDCOPULA = "вал" "кандо" "кем" "коз" "кундо" "лов" "максо" "ниле" "пандо" "пона" "ранг" "сал" ; #!!This will be expanded for homonymy at first. This is not a final solution 

LIST VERBWITHMO = "арсемс" "кармамс" "мадемс" "озамс" ; #!!озамс ярсамо

LIST VERBWITHMODS = "озавтомс" ; #!!озавтомс ярсамо

LIST KINTERM = "ава" "тетя" ;

SET NOT-KINTERM = N - KINTERM ; #!! used with Dat PxSg1


LIST APAK = "апак" ;

#2013-05-22

# Phrasal groups
# --------------

LIST VFIN = Prs Prt1 Prt2 Cond Conj Des Imprt Opt  ; 



# Sets
# ====

SET WORD = N | V | A | Pr | Pron | Adv | CC | CS | Interj | Num | ("\?") ;

#!! !Derivation tags
LIST 2VDerTag = Der/немс ; #!! 2VDerTag
LIST 2NDerTag = Der/кс ; #!! 2NDerTag
LIST DerGenAttr = Der/GenAttr ;

LIST DerTag = Der/MWN Der/немс Der/Ы ; #!! DerTag

# Noun sets


# Adjective sets

# Nominal sets



########################                  #########################
########################                  #########################
                        # disambiguation #
########################                  #########################
########################                  #########################

SECTION


REMOVE Err/Orth ; # If any other reading is possible.

REMOVE:NoNonsenseName Prop IF (0 NONSENSESURANT) ; 

# пельнеть
REMOVE Der/Dimin (0C N ) ;

# short participles should be written with the following noun? new orthographic practice 1993
REMOVE:RemoveShortPrc Der/Ы (0 VFIN) ;

#Ракасть кавто мирде мартонть лангсо,... the one with two husbands
REMOVE Der/MWN (0C Num OR Ine + Def) ; # 2017-10-25
REMOVE:NoNSgNomIndefIfAdvTemp Der/MWN IF (0 Adv + Temp) ; # 2017-10-25

#Лиясто кевкстнить эйсэнь.
REMOVE 2VDerTag (0C V) ; #2017-11-05

#ёнкссонть
REMOVE 2NDerTag (0C N) ; #2017-11-05

#Кода пангт эли нормальть?
REMOVE ConNeg (-1 BOS) ;

#Лездасть тень сёрмадомо аволь ансяк умонь читне.
REMOVE Aux + Neg + Conj IF (0 Pcle + Neg) (NOT 1 ConNeg) ;

# Пургине паздонть апак пеле
SELECT ConNeg (-1 APAK) ;

#Кува?
REMOVE Rel IF (1 QUEST) ;
#«Ков сыргить?»
REMOVE Rel IF (0 Upper) (NOT 0 Prop) ;

#Эйкакшонь масторга.
REMOVE DerGenAttr IF (0 N + SP + Gen) ;

#Ды те истя улияк.

## Nouns

#Vocative
SELECT:VocComrade N + Pl + Nom + Indef (0 JALGA) (-2 BOS) (-1 PUNCT) (1 CLB) ;

#REMOVE PxSg1 IF (0 SP + Dat + Indef) (0 ANT OR SUR) ;
REMOVE:NoPxWhenNotKin PxSg1 IF (0 SP + Dat + Indef OR  SP + Gen + Indef ) (0 NOT-KINTERM) ;

#Genitive readings

#Микол таргизе кисетэнзэ.
#REMOVE Nom (*-1C Nom) (0 Gen) ; too powerful



#Молян верев.
REMOVE:NotLat NONLATIVENOUN (0  N + SP + Lat) ;

#
REMOVE:NotTemp TempCx (0 N + Sg + Nom + Indef OR N + Pl + Nom + Def) (0 NOT-TEMPORALNOUN) ;

#Ранган
REMOVE:NotCop12Pers NOTFIRSTSECONDCOPULA (0 Ind + Prs + SCPERSON12 OR Ind + Prt2 + SCPERSON12 ) ;

#валдодо пешксе
REMOVE:NotAWhenNFollowedByPeshkse A IF (0 N) (0 Abl) (1 PESHKSE) ;

## Numerals

# "кавто" Num AssocColl PxPl3
REMOVE CARDNUM (0 AssocColl ) ;


## Adjectives
# ковгак
REMOVE:NotAdvInterrIfAdvIndef Adv + Interr IF (0 Adv + Indef ) ;

# седе мазы, седе мазыстэ
REMOVE:NotCompN N (-1 SEDE ) ;

#Цёрась сон а берянь.
REMOVE:NotAttrAtEOS Attr (1 EOS) ;

# If there is a conjunction followed by a certain cohort of the same CASE as me, choose me.
SELECT $$Case IF (1 CC LINK 1C $$Case) ;

# hmm, this needs some work
# умаринась ды атямаресь
# NOT WORKING 2017-11-08REMOVE:NotPcleWhenLeftAndRightSameForm Pcle IF (-1 N + $$CASE) (0 ("ды")) (1 N + $$CASE);

# Verbs
# Кудонть потс кадовсть ансяк
REMOVE Der/ОвОмс IF (0 V + IV) ;

# улить
REMOVE Prt1 IF (0 ULEMS) ; 

# ульнить
REMOVE Prs IF (0 ULYNEMS) ; 

# тынь эзимизь кадо
SELECT ScPl2 IF (-1 Pron + Pers + Pl2 + Nom) (0 V) ;

# эзинь прядо
SELECT ConNeg IF (-1 Aux + Neg ) ;

# Минь пурнатано вий.
REMOVE ConNeg IF (NOT -1 Aux + Neg) ;

# якамонзо якизе
#REMOVE TV IF (0 JAKAMS) ((NOT *-1) OR (NOT *1  )) ;

#Кода понгсь минь сынст ней а виднесынек.
REMOVE Clt/Cop ((*-1 VFIN BARRIER CLB OR HYPHEN) OR (*1 VFIN BARRIER CLB OR HYPHEN)) ;

# содан = V not N for 1st and 2nd person
REMOVE:NotNIfVSc1Sc2 NONCOUNT (0 V) (0 SCPERSON12) ;

# невтемстэ
REMOVE Der/ОвтОмс IF (0 V + TV) ;

# озась ярсамо
SELECT Inf + Loc IF ((-1 VERBWITHMO + VFIN OR VERBWITHMODS + VFIN) OR (1 VERBWITHMO + VFIN OR VERBWITHMODS + VFIN)) ;


#молить V TV Der/Ы Der/NomAg N Pl Gen PxSg2
REMOVE Der/Ы + Der/NomAg IF (0 PXPERSON) ;

# седе курок
REMOVE N IF (0 KUROK) (-1 SEDE) ;

#согласясь мартонзо
REMOVE N IF (0 MARTO) (0 PXPERSON) ;

#Ваня марто Марят 
SELECT Pl IF (0 Prop + Pl + Nom + Indef) (-1 MARTO) (-2 Prop + Sg + Nom + Indef) ;

#Ванят-Марят 
SELECT Pl IF (0 Prop + Pl + Nom + Indef) (-1 HYPHEN) (-2 Prop + Pl + Nom + Indef) ;

#а неиль
SELECT Pcle + Neg (1 Prs OR Prt2) ;

# мазыйстэ
REMOVE Der/стО IF (0 Adv) ;

#Микол ульнесь
REMOVE Clt/Cop (1 VFIN) ;
REMOVE Clt/Cop (-1 VFIN) ;

#Дёбаень Микол
SELECT Prop + SP + Gen (1C ANT) ;

#REMOVE IV IF (0 OCONJ) ;

#REMOVE Gen IF (0 Nom OR Gen) ; # argh fix!
SELECT Gen IF (1C Adp) ;

#<псаказояк> remove n sg gen pxsg3 if Ani and n sg nom pxsg3
REMOVE Gen IF (0 Ani + Sg + Nom + PxSg3) ;

SELECT Interj IF (0 Upper) (1 Comma) ;

# Select the proper noun reading if the current word can be
# a proper noun or a noun, and if it is in upper case, 
# and the previous word is only in lower case
SELECT Prop IF (0 Prop) (0 Upper) (-1 Lower) ;
SELECT Prop IF (0 Prop) (0 Upper) (-1 Comma) ;

# Истя Марянь..
SELECT Prop IF (0 Prop + Upper) (-1C Adv) ;


# Ваня марто Марят has a correlating conjunction марто
SELECT CC IF (0 CC) (-1 ANT + Sg + Nom ) (1 ANT + Pl + Nom ) ;

# Select the postposition марто when it is preceded by genitive definite 
SELECT Adp IF (0 MARTO) (-1 Gen + Def) (1 CLB) ;

# Remove der_pr vblex ind prs scsg3 reading if following word is finite verb Careful
# шказо сась
REMOVE Der/Pr IF (1C V + SCPERSON ) ;

# Remove Der/Pr from determiner if following is Sg+Nom+Indef
# аламошка ведне
REMOVE Der/Pr IF (0 Det + Qnt) (1C N + Sg + Nom + Indef ) ;

# Remove ConNeg if following word is finite verb, Careful
# Маря раказевсь
REMOVE ConNeg IF (1C V + SCPERSON ) ;

# actprcshort
REMOVE Der/Ы IF (0 SCPERSON) (1 Adv) ;

## Pronouns

# remove plural stems
REMOVE PERSPRONPL IF (0 PERSPRONSG) ;

## Adpositions

# тыньгак каршо а ультядо
REMOVE Adp (-1 Pron + Pers + PERSON + Nom OR VFIN) (0 Adv) ;

# сюконякшнось партизантнэнь каршо
SELECT Adp (-1 N + Pl + Gen OR N + Sg + Gen OR N + Sg + Nom + Indef OR N + SP + Gen ) ;

# васттано тынк марто
REMOVE:NoCopWhenNextAdp Prs (0 Pron + Pers + PERSON + Gen) (1 Adp) ;
